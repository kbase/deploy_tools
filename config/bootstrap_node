#!/usr/bin/env perl
use strict;

# Generic script to bootstrap a node.  This should handle all of the
# items requiring root privs.
#
my $debug=0;
my $version="20150204.3";
my $vf="/.kb_bootstrap";
my $PIC="apt-get install -y";



# Check version file
if (-e $vf){
  open(V,$vf);
  my $tv=<V>;
  chomp $tv;
  if ($tv eq $version){
    print "Bootstrap up to date\n";
    exit;
  }
}


# Format and mount in /vdb as data
# TODO: Maybe make these options?
my $mpt="/data";
my $dev="/dev/vdb";
if ( -e $dev ){
  my $doformat=1;
  open(M,"/proc/mounts");
  while(<M>){
    $doformat=0 if \/data/;
  }

  my $xfs="/sbin/mkfs.xfs";
  add_package("xfsprogs",$xfs);

  # Format data and mount
  if ($doformat) {
    mysystem("mkfs -t xfs $dev");
    mkdir "$mpt" unless -e "$mpt";
    mysystem("mount $dev $mpt");
  }
  else{
    print "$mpt mounted\n" if $debug;
  }
}

# 
mkdir "/kb" unless -e "/kb";

# TODO: Some type of package list.  Could use kb_bootstrap too.
system("apt-get update");
add_package("bzr cvs libcurl4-gnutls-dev mysql-client zip libdb5.1");
add_package("apache2");

system("sed -i 's/yes/no/' /etc/xinetd.d/check_mk;/etc/init.d/xinetd restart");

# Write version tag out
open(V,"> $vf");
print V "$version\n";
close V;


# Package add function
sub add_package {
  my $packagelist=shift;
  my $test=shift;

  return if (defined $test && -e $test);
  system("$PIC $packagelist");

}
