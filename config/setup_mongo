#!/usr/bin/env perl

use FindBin;
use lib "$FindBin::Bin/../perl/";
use KBDeploy;
use Getopt::Std;
use strict;

my %opt;
my $force=0;
my $dryrun=0;

getopts('nf',\%opt);
$dryrun=1 if defined $opt{n};
$force=1 if defined $opt{f};

my $debug=0;


my $cfg=read_config();

# Create Accounts for each service that uses mongo
#
for my $s (keys %{$cfg->{services}}){
  my $mh=$cfg->{services}->{$s}->{'mongodb-host'};
  my $mu=$cfg->{services}->{$s}->{'mongodb-user'};
  my $mp=$cfg->{services}->{$s}->{'mongodb-pwd'};
  my $md=$cfg->{services}->{$s}->{'mongodb-database'};
  my $rem;
  if (defined $mh){
    if ($mh=~/mongodb:/){
       #Format: mongodb://user:pwd@host/db
       $_=$mh;
       s/mongodb:\/\///;
       ($mu,$mp,$mh,$md,$rem)=split /[:@\/]/,$_,5;
       die "Unable to parse URI $_\nusername and password cannot contain a :,@ or /\n" if defined $rem;
       #($mp,$_)=split /@/,$_,2;
       #($mh,$md)=split /\//,$_,2;
    }
    else{
    }
    adduser($md,$mu,$mp, "[\"readWrite\", \"dbAdmin\"]");
  }
}

# Done

sub adduser {
  my ($db,$user,$pwd,$roles)=@_;
  # TODO: Add some type of check
  my $com="use $db;\ndb.createUser( { user: \"$user\", pwd: \"$pwd\", roles: $roles })\n";
  if ($dryrun){
    print "- Add $user.  Skipping for dry run\n";
  }
  else {
    mysystem("echo '$com'|mongo|grep -v 'exists'|grep -v bye|grep -v connecting|grep -v shell");
  }
}

