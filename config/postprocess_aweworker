#!/usr/bin/env perl

use FindBin;
use lib "$FindBin::Bin/../perl/";
use KBDeploy;
use strict;

my $service="aweclient";

my $cfg=read_config();
# We should know what service to run.  This is
# just a safety measure in case it gets run on the wrong host.
my $KB_DEPLOY=$cfg->{'global'}->{deploydir};
my $KB_DC=$cfg->{'global'}->{devcontainer};
my $base_url=$cfg->{global}->{'baseurl'};
$base_url=~s/http.*\/\///;
$base_url=~s/\///;


my @sl=myservices();
my $service=$sl[0];

print "Service: $service\n";

# Fix up config
my $file=$KB_DEPLOY."/services/awe_service/conf/awec.cfg";
my $baseworkdir=$cfg->{'services'}->{$service}->{'baseworkdir'};
my $mcfg=new Config::IniFiles( -file => $file) or die "Unable to open $file".$Config::IniFiles::errors[0];

$mcfg->newval('Client','group','replace') or die "Unable to set group";
$mcfg->newval('Client','clientgroup_token',$cfg->{services}->{$service}->{'token'}) or die "Unable to set token";
$mcfg->newval('Client','clientgroup_token',"replace");
$mcfg->newval('Client','serverurl',$cfg->{services}->{$service}->{'serverurl'}) or die "Unable to set serverurl";
$mcfg->setval('Client','supported_apps','*');
$mcfg->setval('Client','name','hostname');
# added kkeller 30jul2015.  not generally suitable for production
$mcfg->setval('Client','auto_clean_dir','false');


my @aweGroups;
foreach my $token (split /,/,$cfg->{services}->{$service}->{'tokens'}){
  my @l=split /[=|]/,$token;
  my $group=$l[1];
  push @aweGroups,$group;
  $mcfg->setval('Client','group',$group);
  $mcfg->setval('Client','clientgroup_token',$token);
  $mcfg->setval('Client','workpath',$baseworkdir . '/' . $group . '/work');
  $mcfg->setval('Directories','data',$baseworkdir . '/' . $group . '/data');
  $mcfg->setval('Directories','logs',$baseworkdir . '/' . $group . '/logs');
  my $out=$file;
  $out=~s/cfg$//;
  $out.="$group.cfg";
  print "Updating $out\n";
  $mcfg->WriteConfig($out) or die "Unable to write $file";
}

foreach my $action ('start','stop')
{
  my $script=<<EOF;
#!/bin/bash
for worker in @aweGroups
do
    $KB_DEPLOY/services/awe_service/${action}_aweclient \$worker
done
EOF

  my $scriptfile="$KB_DEPLOY/services/awe_service/${action}_service";
  open (SCRIPT, '>', $scriptfile) or die "couldn't open $scriptfile: $!";
  print SCRIPT $script;
  close SCRIPT;

  # need to protect / in $baseworkdir.  yay leaning toothpick syndrome!
  $baseworkdir=~s/\//\\\//g;
  # kkeller: i use perl as my sed
  mysystem("perl -pi -e 's|^PID_FILE=.*|PID_FILE=$baseworkdir/client\\\$suffix.pid|;' $KB_DEPLOY/services/awe_service/${action}_aweclient");
  mysystem("perl -pi -e 's|^AWE_DIR=.*|AWE_DIR=$baseworkdir|;' $KB_DEPLOY/services/awe_service/${action}_aweclient");
}

# May not be needed anymore.  Check.
mysystem("sed -i 's/\\/\\/kbase.us/\\/\\/".$base_url."\\//' $KB_DEPLOY/plbin/njs*");
mysystem("sed -i 's/\\/\\/tutorial.theseed.org/\\/\\/".$base_url."\\//' $KB_DEPLOY/plbin/njs*");
mysystem("touch $KB_DEPLOY/lib/biokbase/AbstractHandle/__init__.py");

# 
# Get assembly scripts
# TODO: remove this hack
if ( ! -e "$KB_DEPLOY/bin/assemble_contigset_from_reads") {
  mysystem("cp $KB_DC/modules/kb_test/methods/scripts/assemble_contigset_from_reads/*pl $KB_DEPLOY/plbin/");
  mysystem("ln -s $KB_DEPLOY/plbin/assemble_contigset_from_reads.pl $KB_DEPLOY/bin/assemble_contigset_from_reads");
  mysystem("ln -s $KB_DEPLOY/plbin/fasta_to_contigset.pl $KB_DEPLOY/bin/fasta_to_contigset");
  mysystem("sed  -i 's/\.pl//' $KB_DEPLOY/bin/assemble_contigset_from_reads");
  mysystem("sed  -i 's/\\..fasta_to_contigset/fasta_to_contigset/' $KB_DEPLOY/bin/assemble_contigset_from_reads");
}

# Sync and restart other aweworkers
if (defined $cfg->{services}->{$service}->{shareddir}){
  my $shared=$cfg->{services}->{$service}->{shareddir};
  my @s=stat $KB_DEPLOY;
  my $ts=$s[10];

  mysystem("rsync -avvz --exclude *.log --exclude *.pid $KB_DEPLOY/ $shared/deployment.$ts");
  if (defined $cfg->{services}->{$service}->{aweworkers}){
    for my $host (split /,/, $cfg->{services}->{$service}->{aweworkers}) {
      mysystem("ssh $host $KB_DEPLOY/services/awe_service/stop_service || echo Ignore");
      mysystem("ssh $host \"rm $KB_DEPLOY;ln -s $shared/deployment.$ts $KB_DEPLOY\"");
      mysystem("ssh $host $KB_DEPLOY/services/awe_service/start_service || echo Ignore");
    }
  }
}

# TODO
#
# export TOKEN=$(grep token ~/.kbase_config|sed 's/token=//')
#
#curl -X POST -H "AUthorization: OAuth $TOKEN" http://kbase.us/services/awe-api/cgroup/<cgroup>
#
# Grab output and stuff in config

